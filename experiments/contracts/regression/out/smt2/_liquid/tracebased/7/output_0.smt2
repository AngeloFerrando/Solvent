(set-logic ALL)
; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((Proc 0)) (((coinbase) (foo_func))))
(declare-fun w_0 () Int)
(declare-fun success_1 () Bool)
(declare-fun t_success_0_0 () Bool)
(declare-fun aw_0_2 () Int)
(declare-fun aw_1_2 () Int)
(declare-fun aw_0_1 () Int)
(declare-fun aw_1_1 () Int)
(declare-fun aw_0_0 () Int)
(declare-fun aw_1_0 () Int)
(declare-fun t_w_0_0 () Int)
(declare-fun w_1 () Int)
(declare-fun err_1 () Bool)
(declare-fun xn_0 () Int)
(declare-fun xa_0 () Int)
(declare-fun success_2 () Bool)
(declare-fun t_success_1_0 () Bool)
(declare-fun aw_2_2 () Int)
(declare-fun aw_2_1 () Int)
(declare-fun aw_2_0 () Int)
(declare-fun t_w_1_0 () Int)
(declare-fun w_2 () Int)
(declare-fun err_2 () Bool)
(declare-fun xn_1 () Int)
(declare-fun xa_1 () Int)
(declare-fun f_1 () Proc)
(declare-fun block_num_1 () Int)
(declare-fun block_num_2 () Int)
(declare-fun success_3 () Bool)
(declare-fun t_success_2_0 () Bool)
(declare-fun aw_3_2 () Int)
(declare-fun aw_3_1 () Int)
(declare-fun aw_3_0 () Int)
(declare-fun t_w_2_0 () Int)
(declare-fun w_3 () Int)
(declare-fun err_3 () Bool)
(declare-fun xn_2 () Int)
(declare-fun xa_2 () Int)
(declare-fun f_2 () Proc)
(declare-fun block_num_3 () Int)
(declare-fun success_4 () Bool)
(declare-fun t_success_3_0 () Bool)
(declare-fun aw_4_2 () Int)
(declare-fun aw_4_1 () Int)
(declare-fun aw_4_0 () Int)
(declare-fun t_w_3_0 () Int)
(declare-fun w_4 () Int)
(declare-fun err_4 () Bool)
(declare-fun xn_3 () Int)
(declare-fun xa_3 () Int)
(declare-fun f_3 () Proc)
(declare-fun block_num_4 () Int)
(declare-fun success_5 () Bool)
(declare-fun t_success_4_0 () Bool)
(declare-fun aw_5_2 () Int)
(declare-fun aw_5_1 () Int)
(declare-fun aw_5_0 () Int)
(declare-fun t_w_4_0 () Int)
(declare-fun w_5 () Int)
(declare-fun err_5 () Bool)
(declare-fun xn_4 () Int)
(declare-fun xa_4 () Int)
(declare-fun f_4 () Proc)
(declare-fun block_num_5 () Int)
(declare-fun success_6 () Bool)
(declare-fun t_success_5_0 () Bool)
(declare-fun aw_6_2 () Int)
(declare-fun aw_6_1 () Int)
(declare-fun aw_6_0 () Int)
(declare-fun t_w_5_0 () Int)
(declare-fun w_6 () Int)
(declare-fun err_6 () Bool)
(declare-fun xn_5 () Int)
(declare-fun xa_5 () Int)
(declare-fun f_5 () Proc)
(declare-fun block_num_6 () Int)
(declare-fun success_7 () Bool)
(declare-fun t_success_6_0 () Bool)
(declare-fun aw_7_2 () Int)
(declare-fun aw_7_1 () Int)
(declare-fun aw_7_0 () Int)
(declare-fun t_w_6_0 () Int)
(declare-fun w_7 () Int)
(declare-fun err_7 () Bool)
(declare-fun xn_6 () Int)
(declare-fun xa_6 () Int)
(declare-fun f_6 () Proc)
(declare-fun block_num_7 () Int)
(declare-fun success_8 () Bool)
(declare-fun t_success_7_0 () Bool)
(declare-fun aw_8_2 () Int)
(declare-fun aw_8_1 () Int)
(declare-fun aw_8_0 () Int)
(declare-fun t_w_7_0 () Int)
(declare-fun w_8 () Int)
(declare-fun err_8 () Bool)
(declare-fun xn_7 () Int)
(declare-fun xa_7 () Int)
(declare-fun f_7 () Proc)
(declare-fun block_num_8 () Int)
(assert
 (>= w_0 0))
(assert
 (let (($x2645 (= t_success_0_0 success_1)))
 (let (($x2643 (= aw_1_2 aw_0_2)))
 (let (($x2642 (= aw_1_1 aw_0_1)))
 (let (($x2641 (= aw_1_0 aw_0_0)))
 (let (($x2640 (= w_1 t_w_0_0)))
 (let (($x2647 (and (> xn_0 0) (= err_1 false) true (= t_success_0_0 false) (and $x2640 (and $x2641 $x2642 $x2643) $x2645))))
 (and (and (>= xa_0 0) (<= xa_0 2) (>= xn_0 0)) (and (>= aw_0_0 0) (>= aw_0_1 0) (>= aw_0_2 0)) (and (= t_w_0_0 (+ w_0 xn_0)) $x2647)))))))))
(assert
 (let (($x2691 (= t_success_1_0 success_2)))
 (let (($x2674 (= aw_2_2 aw_1_2)))
 (let (($x2673 (= aw_2_1 aw_1_1)))
 (let (($x2672 (= aw_2_0 aw_1_0)))
 (let (($x2675 (and $x2672 $x2673 $x2674)))
 (let (($x2671 (= w_2 t_w_1_0)))
 (let (($x2668 (= err_2 false)))
 (let (($x2690 (ite (and (>= t_w_1_0 10)) (and (= t_success_1_0 true) true) (and true true (= t_success_1_0 success_1)))))
 (let (($x2670 (= t_w_1_0 (+ w_1 xn_1))))
 (let (($x2682 (<= xa_1 2)))
 (let (($x2681 (>= xa_1 1)))
 (let (($x2695 (and $x2681 $x2682 (and $x2670 (and $x2690 $x2668 true (and $x2671 $x2675 $x2691))))))
 (let (($x2667 (= xa_1 0)))
 (let (($x2679 (and $x2667 (and $x2668 $x2670 (and $x2671 $x2675 (= success_1 success_2))))))
 (let (($x2666 (= f_1 coinbase)))
 (and (and (>= xn_1 0) (>= w_2 0)) (and (>= aw_1_0 0) (>= aw_1_1 0) (>= aw_1_2 0)) (>= block_num_2 block_num_1) (ite $x2666 $x2679 $x2695))))))))))))))))))
(assert
 (let (($x2740 (= t_success_2_0 success_3)))
 (let (($x2725 (= aw_3_2 aw_2_2)))
 (let (($x2724 (= aw_3_1 aw_2_1)))
 (let (($x2723 (= aw_3_0 aw_2_0)))
 (let (($x2726 (and $x2723 $x2724 $x2725)))
 (let (($x2722 (= w_3 t_w_2_0)))
 (let (($x2719 (= err_3 false)))
 (let (($x2739 (ite (and (>= t_w_2_0 10)) (and (= t_success_2_0 true) true) (and true true (= t_success_2_0 success_2)))))
 (let (($x2721 (= t_w_2_0 (+ w_2 xn_2))))
 (let (($x2732 (<= xa_2 2)))
 (let (($x2731 (>= xa_2 1)))
 (let (($x2744 (and $x2731 $x2732 (and $x2721 (and $x2739 $x2719 true (and $x2722 $x2726 $x2740))))))
 (let (($x2718 (= xa_2 0)))
 (let (($x2730 (and $x2718 (and $x2719 $x2721 (and $x2722 $x2726 (= success_2 success_3))))))
 (let (($x2717 (= f_2 coinbase)))
 (and (and (>= xn_2 0) (>= w_3 0)) (and (>= aw_2_0 0) (>= aw_2_1 0) (>= aw_2_2 0)) (>= block_num_3 block_num_2) (ite $x2717 $x2730 $x2744))))))))))))))))))
(assert
 (let (($x2789 (= t_success_3_0 success_4)))
 (let (($x2774 (= aw_4_2 aw_3_2)))
 (let (($x2773 (= aw_4_1 aw_3_1)))
 (let (($x2772 (= aw_4_0 aw_3_0)))
 (let (($x2775 (and $x2772 $x2773 $x2774)))
 (let (($x2771 (= w_4 t_w_3_0)))
 (let (($x2768 (= err_4 false)))
 (let (($x2788 (ite (and (>= t_w_3_0 10)) (and (= t_success_3_0 true) true) (and true true (= t_success_3_0 success_3)))))
 (let (($x2770 (= t_w_3_0 (+ w_3 xn_3))))
 (let (($x2781 (<= xa_3 2)))
 (let (($x2780 (>= xa_3 1)))
 (let (($x2793 (and $x2780 $x2781 (and $x2770 (and $x2788 $x2768 true (and $x2771 $x2775 $x2789))))))
 (let (($x2767 (= xa_3 0)))
 (let (($x2779 (and $x2767 (and $x2768 $x2770 (and $x2771 $x2775 (= success_3 success_4))))))
 (let (($x2766 (= f_3 coinbase)))
 (and (and (>= xn_3 0) (>= w_4 0)) (and (>= aw_3_0 0) (>= aw_3_1 0) (>= aw_3_2 0)) (>= block_num_4 block_num_3) (ite $x2766 $x2779 $x2793))))))))))))))))))
(assert
 (let (($x2838 (= t_success_4_0 success_5)))
 (let (($x2823 (= aw_5_2 aw_4_2)))
 (let (($x2822 (= aw_5_1 aw_4_1)))
 (let (($x2821 (= aw_5_0 aw_4_0)))
 (let (($x2824 (and $x2821 $x2822 $x2823)))
 (let (($x2820 (= w_5 t_w_4_0)))
 (let (($x2817 (= err_5 false)))
 (let (($x2837 (ite (and (>= t_w_4_0 10)) (and (= t_success_4_0 true) true) (and true true (= t_success_4_0 success_4)))))
 (let (($x2819 (= t_w_4_0 (+ w_4 xn_4))))
 (let (($x2830 (<= xa_4 2)))
 (let (($x2829 (>= xa_4 1)))
 (let (($x2842 (and $x2829 $x2830 (and $x2819 (and $x2837 $x2817 true (and $x2820 $x2824 $x2838))))))
 (let (($x2816 (= xa_4 0)))
 (let (($x2828 (and $x2816 (and $x2817 $x2819 (and $x2820 $x2824 (= success_4 success_5))))))
 (let (($x2815 (= f_4 coinbase)))
 (and (and (>= xn_4 0) (>= w_5 0)) (and (>= aw_4_0 0) (>= aw_4_1 0) (>= aw_4_2 0)) (>= block_num_5 block_num_4) (ite $x2815 $x2828 $x2842))))))))))))))))))
(assert
 (let (($x2887 (= t_success_5_0 success_6)))
 (let (($x2872 (= aw_6_2 aw_5_2)))
 (let (($x2871 (= aw_6_1 aw_5_1)))
 (let (($x2870 (= aw_6_0 aw_5_0)))
 (let (($x2873 (and $x2870 $x2871 $x2872)))
 (let (($x2869 (= w_6 t_w_5_0)))
 (let (($x2866 (= err_6 false)))
 (let (($x2886 (ite (and (>= t_w_5_0 10)) (and (= t_success_5_0 true) true) (and true true (= t_success_5_0 success_5)))))
 (let (($x2868 (= t_w_5_0 (+ w_5 xn_5))))
 (let (($x2879 (<= xa_5 2)))
 (let (($x2878 (>= xa_5 1)))
 (let (($x2891 (and $x2878 $x2879 (and $x2868 (and $x2886 $x2866 true (and $x2869 $x2873 $x2887))))))
 (let (($x2865 (= xa_5 0)))
 (let (($x2877 (and $x2865 (and $x2866 $x2868 (and $x2869 $x2873 (= success_5 success_6))))))
 (let (($x2864 (= f_5 coinbase)))
 (and (and (>= xn_5 0) (>= w_6 0)) (and (>= aw_5_0 0) (>= aw_5_1 0) (>= aw_5_2 0)) (>= block_num_6 block_num_5) (ite $x2864 $x2877 $x2891))))))))))))))))))
(assert
 (let (($x2936 (= t_success_6_0 success_7)))
 (let (($x2921 (= aw_7_2 aw_6_2)))
 (let (($x2920 (= aw_7_1 aw_6_1)))
 (let (($x2919 (= aw_7_0 aw_6_0)))
 (let (($x2922 (and $x2919 $x2920 $x2921)))
 (let (($x2918 (= w_7 t_w_6_0)))
 (let (($x2915 (= err_7 false)))
 (let (($x2935 (ite (and (>= t_w_6_0 10)) (and (= t_success_6_0 true) true) (and true true (= t_success_6_0 success_6)))))
 (let (($x2917 (= t_w_6_0 (+ w_6 xn_6))))
 (let (($x2928 (<= xa_6 2)))
 (let (($x2927 (>= xa_6 1)))
 (let (($x2940 (and $x2927 $x2928 (and $x2917 (and $x2935 $x2915 true (and $x2918 $x2922 $x2936))))))
 (let (($x2914 (= xa_6 0)))
 (let (($x2926 (and $x2914 (and $x2915 $x2917 (and $x2918 $x2922 (= success_6 success_7))))))
 (let (($x2913 (= f_6 coinbase)))
 (and (and (>= xn_6 0) (>= w_7 0)) (and (>= aw_6_0 0) (>= aw_6_1 0) (>= aw_6_2 0)) (>= block_num_7 block_num_6) (ite $x2913 $x2926 $x2940))))))))))))))))))
(assert
 (let (($x2985 (= t_success_7_0 success_8)))
 (let (($x2970 (= aw_8_2 aw_7_2)))
 (let (($x2969 (= aw_8_1 aw_7_1)))
 (let (($x2968 (= aw_8_0 aw_7_0)))
 (let (($x2971 (and $x2968 $x2969 $x2970)))
 (let (($x2967 (= w_8 t_w_7_0)))
 (let (($x2964 (= err_8 false)))
 (let (($x2984 (ite (and (>= t_w_7_0 10)) (and (= t_success_7_0 true) true) (and true true (= t_success_7_0 success_7)))))
 (let (($x2966 (= t_w_7_0 (+ w_7 xn_7))))
 (let (($x2977 (<= xa_7 2)))
 (let (($x2976 (>= xa_7 1)))
 (let (($x2989 (and $x2976 $x2977 (and $x2966 (and $x2984 $x2964 true (and $x2967 $x2971 $x2985))))))
 (let (($x2963 (= xa_7 0)))
 (let (($x2975 (and $x2963 (and $x2964 $x2966 (and $x2967 $x2971 (= success_7 success_8))))))
 (let (($x2962 (= f_7 coinbase)))
 (and (and (>= xn_7 0) (>= w_8 0)) (and (>= aw_7_0 0) (>= aw_7_1 0) (>= aw_7_2 0)) (>= block_num_8 block_num_7) (ite $x2962 $x2975 $x2989))))))))))))))))))
(assert
 (let (($x3030 (exists ((xa_q Int) )(let (($x3025 (forall ((xn_q0 Int) (f_q0 Proc) (wq0 Int) (awq0_0 Int) (awq0_1 Int) (awq0_2 Int) (t_wq0_0 Int) (t_wq0_1 Int) (t_wq0_2 Int) (t_wq0_3 Int) (t_wq0_4 Int) (t_wq0_5 Int) (t_wq0_6 Int) (t_wq0_7 Int) (t_wq0_8 Int) (t_wq0_9 Int) (t_wq0_10 Int) (t_wq0_11 Int) (t_wq0_12 Int) (t_wq0_13 Int) (t_wq0_14 Int) (t_wq0_15 Int) (t_wq0_16 Int) (t_wq0_17 Int) (t_wq0_18 Int) (t_wq0_19 Int) (t_wq0_20 Int) (t_wq0_21 Int) (t_wq0_22 Int) (t_wq0_23 Int) (t_wq0_24 Int) (t_wq0_25 Int) (t_wq0_26 Int) (t_wq0_27 Int) (t_wq0_28 Int) (t_wq0_29 Int) (t_wq0_30 Int) (t_wq0_31 Int) (t_wq0_32 Int) (t_wq0_33 Int) (t_wq0_34 Int) (t_wq0_35 Int) (t_wq0_36 Int) (t_wq0_37 Int) (t_wq0_38 Int) (t_wq0_39 Int) (t_wq0_40 Int) (t_wq0_41 Int) (t_wq0_42 Int) (t_wq0_43 Int) (t_wq0_44 Int) (t_wq0_45 Int) (t_wq0_46 Int) (t_wq0_47 Int) (t_wq0_48 Int) (t_wq0_49 Int) (t_awq0_0_0 Int) (t_awq0_0_1 Int) (t_awq0_0_2 Int) (t_awq0_1_0 Int) (t_awq0_1_1 Int) (t_awq0_1_2 Int) (t_awq0_2_0 Int) (t_awq0_2_1 Int) (t_awq0_2_2 Int) (t_awq0_3_0 Int) (t_awq0_3_1 Int) (t_awq0_3_2 Int) (t_awq0_4_0 Int) (t_awq0_4_1 Int) (t_awq0_4_2 Int) (t_awq0_5_0 Int) (t_awq0_5_1 Int) (t_awq0_5_2 Int) (t_awq0_6_0 Int) (t_awq0_6_1 Int) (t_awq0_6_2 Int) (t_awq0_7_0 Int) (t_awq0_7_1 Int) (t_awq0_7_2 Int) (t_awq0_8_0 Int) (t_awq0_8_1 Int) (t_awq0_8_2 Int) (t_awq0_9_0 Int) (t_awq0_9_1 Int) (t_awq0_9_2 Int) (t_awq0_10_0 Int) (t_awq0_10_1 Int) (t_awq0_10_2 Int) (t_awq0_11_0 Int) (t_awq0_11_1 Int) (t_awq0_11_2 Int) (t_awq0_12_0 Int) (t_awq0_12_1 Int) (t_awq0_12_2 Int) (t_awq0_13_0 Int) (t_awq0_13_1 Int) (t_awq0_13_2 Int) (t_awq0_14_0 Int) (t_awq0_14_1 Int) (t_awq0_14_2 Int) (t_awq0_15_0 Int) (t_awq0_15_1 Int) (t_awq0_15_2 Int) (t_awq0_16_0 Int) (t_awq0_16_1 Int) (t_awq0_16_2 Int) (t_awq0_17_0 Int) (t_awq0_17_1 Int) (t_awq0_17_2 Int) (t_awq0_18_0 Int) (t_awq0_18_1 Int) (t_awq0_18_2 Int) (t_awq0_19_0 Int) (t_awq0_19_1 Int) (t_awq0_19_2 Int) (t_awq0_20_0 Int) (t_awq0_20_1 Int) (t_awq0_20_2 Int) (t_awq0_21_0 Int) (t_awq0_21_1 Int) (t_awq0_21_2 Int) (t_awq0_22_0 Int) (t_awq0_22_1 Int) (t_awq0_22_2 Int) (t_awq0_23_0 Int) (t_awq0_23_1 Int) (t_awq0_23_2 Int) (t_awq0_24_0 Int) (t_awq0_24_1 Int) (t_awq0_24_2 Int) (t_awq0_25_0 Int) (t_awq0_25_1 Int) (t_awq0_25_2 Int) (t_awq0_26_0 Int) (t_awq0_26_1 Int) (t_awq0_26_2 Int) (t_awq0_27_0 Int) (t_awq0_27_1 Int) (t_awq0_27_2 Int) (t_awq0_28_0 Int) (t_awq0_28_1 Int) (t_awq0_28_2 Int) (t_awq0_29_0 Int) (t_awq0_29_1 Int) (t_awq0_29_2 Int) (t_awq0_30_0 Int) (t_awq0_30_1 Int) (t_awq0_30_2 Int) (t_awq0_31_0 Int) (t_awq0_31_1 Int) (t_awq0_31_2 Int) (t_awq0_32_0 Int) (t_awq0_32_1 Int) (t_awq0_32_2 Int) (t_awq0_33_0 Int) (t_awq0_33_1 Int) (t_awq0_33_2 Int) (t_awq0_34_0 Int) (t_awq0_34_1 Int) (t_awq0_34_2 Int) (t_awq0_35_0 Int) (t_awq0_35_1 Int) (t_awq0_35_2 Int) (t_awq0_36_0 Int) (t_awq0_36_1 Int) (t_awq0_36_2 Int) (t_awq0_37_0 Int) (t_awq0_37_1 Int) (t_awq0_37_2 Int) (t_awq0_38_0 Int) (t_awq0_38_1 Int) (t_awq0_38_2 Int) (t_awq0_39_0 Int) (t_awq0_39_1 Int) (t_awq0_39_2 Int) (t_awq0_40_0 Int) (t_awq0_40_1 Int) (t_awq0_40_2 Int) (t_awq0_41_0 Int) (t_awq0_41_1 Int) (t_awq0_41_2 Int) (t_awq0_42_0 Int) (t_awq0_42_1 Int) (t_awq0_42_2 Int) (t_awq0_43_0 Int) (t_awq0_43_1 Int) (t_awq0_43_2 Int) (t_awq0_44_0 Int) (t_awq0_44_1 Int) (t_awq0_44_2 Int) (t_awq0_45_0 Int) (t_awq0_45_1 Int) (t_awq0_45_2 Int) (t_awq0_46_0 Int) (t_awq0_46_1 Int) (t_awq0_46_2 Int) (t_awq0_47_0 Int) (t_awq0_47_1 Int) (t_awq0_47_2 Int) (t_awq0_48_0 Int) (t_awq0_48_1 Int) (t_awq0_48_2 Int) (t_awq0_49_0 Int) (t_awq0_49_1 Int) (t_awq0_49_2 Int) (err_q0 Bool) (successq0 Bool) (t_successq0_0 Bool) (t_successq0_1 Bool) (t_successq0_2 Bool) (t_successq0_3 Bool) (t_successq0_4 Bool) (t_successq0_5 Bool) (t_successq0_6 Bool) (t_successq0_7 Bool) (t_successq0_8 Bool) (t_successq0_9 Bool) (t_successq0_10 Bool) (t_successq0_11 Bool) (t_successq0_12 Bool) (t_successq0_13 Bool) (t_successq0_14 Bool) (t_successq0_15 Bool) (t_successq0_16 Bool) (t_successq0_17 Bool) (t_successq0_18 Bool) (t_successq0_19 Bool) (t_successq0_20 Bool) (t_successq0_21 Bool) (t_successq0_22 Bool) (t_successq0_23 Bool) (t_successq0_24 Bool) (t_successq0_25 Bool) (t_successq0_26 Bool) (t_successq0_27 Bool) (t_successq0_28 Bool) (t_successq0_29 Bool) (t_successq0_30 Bool) (t_successq0_31 Bool) (t_successq0_32 Bool) (t_successq0_33 Bool) (t_successq0_34 Bool) (t_successq0_35 Bool) (t_successq0_36 Bool) (t_successq0_37 Bool) (t_successq0_38 Bool) (t_successq0_39 Bool) (t_successq0_40 Bool) (t_successq0_41 Bool) (t_successq0_42 Bool) (t_successq0_43 Bool) (t_successq0_44 Bool) (t_successq0_45 Bool) (t_successq0_46 Bool) (t_successq0_47 Bool) (t_successq0_48 Bool) (t_successq0_49 Bool) )(let (($x3309 (and (= awq0_0 aw_8_0) (= awq0_1 aw_8_1) (= awq0_2 aw_8_2))))
(let (($x3310 (= wq0 t_wq0_0)))
(let (($x3312 (= err_q0 false)))
(let (($x3319 (ite (and (>= t_wq0_0 10)) (and (= t_successq0_0 true) true) (and true true (= t_successq0_0 success_8)))))
(let (($x3322 (= t_wq0_0 (+ w_8 xn_q0))))
(let (($x3018 (and (>= xa_q 1) (<= xa_q 2) (and $x3322 (and $x3319 $x3312 true (and $x3310 $x3309 (= t_successq0_0 successq0)))))))
(let (($x3020 (and (= xa_q 0) (and $x3312 $x3322 (and $x3310 $x3309 (= success_8 successq0))))))
(let (($x3022 (and (and (>= xn_q0 0) (>= wq0 0)) (and (>= aw_8_0 0) (>= aw_8_1 0) (>= aw_8_2 0)) (>= block_num_8 block_num_8) (ite (= f_q0 coinbase) $x3020 $x3018))))
(or (not $x3022) (not successq0)))))))))))
))
(and (and (>= xa_q 1) (<= xa_q 2)) (> w_8 0) $x3025)))
))
(and $x3030)))
(check-sat)

(get-model)